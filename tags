!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!HTML	C,stylesheet	/stylesheets/
!_TAG_KIND_DESCRIPTION!HTML	I,id	/identifiers/
!_TAG_KIND_DESCRIPTION!HTML	J,script	/scripts/
!_TAG_KIND_DESCRIPTION!HTML	a,anchor	/named anchors/
!_TAG_KIND_DESCRIPTION!HTML	c,class	/classes/
!_TAG_KIND_DESCRIPTION!HTML	h,heading1	/H1 headings/
!_TAG_KIND_DESCRIPTION!HTML	i,heading2	/H2 headings/
!_TAG_KIND_DESCRIPTION!HTML	j,heading3	/H3 headings/
!_TAG_KIND_DESCRIPTION!HTML	t,title	/titles/
!_TAG_KIND_DESCRIPTION!Iniconf	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Iniconf	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!TypeScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!TypeScript	G,generator	/generators/
!_TAG_KIND_DESCRIPTION!TypeScript	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!TypeScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!TypeScript	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!TypeScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!TypeScript	g,enum	/enums/
!_TAG_KIND_DESCRIPTION!TypeScript	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!TypeScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!TypeScript	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!TypeScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!TypeScript	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!HTML	0.0	/current.age/
!_TAG_PARSER_VERSION!Iniconf	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!TypeScript	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/yuri/Desktop/gpuserver/omp/git/tcc/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!HTML!class	attribute	/assigned as attributes/
!_TAG_ROLE_DESCRIPTION!HTML!script	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!HTML!stylesheet	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
$(TARGET)	simwave/kernel/backend/c_code/multi/Makefile	/^$(TARGET) : $(OBJFILES)$/;"	t
2-D Production Code Test Along line A-A'	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/tests.html	/^<\/h1>$/;"	h
2-D Production Code Tests	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/tests.html	/^<title>2-D Production Code Tests<\/title>$/;"	j
2-D Zero Offset Tests	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/2dzero.html	/^<title>2-D Zero Offset Tests<\/title>$/;"	j
2-D Zero Offset Tests along line A-A'	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/2dzero.html	/^<\/h1>$/;"	h
3-D Illumination Studies	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/illum.html	/^<title>3-D Illumination Studies<\/title>$/;"	j
40 Foot Tests	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/2dzero.html	/^<h3>40 Foot Tests<\/h3>$/;"	j
80 Foot Tests	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/2dzero.html	/^<h3> 80 Foot Tests<\/h3>$/;"	j
A Simple FRAMESET Example	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/index.html	/^<TITLE>A Simple FRAMESET Example<\/TITLE>$/;"	j
ANSFormatSpecHeader	simwave/kernel/backend/include/nvcomp/ans.hpp	/^struct ANSFormatSpecHeader {$/;"	s	namespace:nvcomp
ANSManager	simwave/kernel/backend/include/nvcomp/ans.hpp	/^struct ANSManager : PimplManager {$/;"	s	namespace:nvcomp
Acquiring New Shot Lines for Phase C	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/PhaseC.html	/^<h2> Acquiring New Shot Lines for Phase C <\/h2>$/;"	i
Animation of Seismic Waves In Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/tests.html	/^<\/h1>$/;"	h
At the present time only tape copies of the Phase 3 Classic Datasets are available. Phase 1 and Phase 2 datasets are small enough to be quickly accessed through the Internet. For Information about obtaining tape copies of the Classic Datasets Contact: Paul Docherty-GoldenGeophysics	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/paul.html	/^<\/h3>$/;"	j
BitcompFormatSpecHeader	simwave/kernel/backend/include/nvcomp/bitcomp.hpp	/^struct BitcompFormatSpecHeader {$/;"	s	namespace:nvcomp
BitcompManager	simwave/kernel/backend/include/nvcomp/bitcomp.hpp	/^struct BitcompManager : PimplManager {$/;"	s	namespace:nvcomp
CC	simwave/kernel/backend/c_code/multi/Makefile	/^CC = clang++$/;"	m
CONFIG_ERROR	versioneer.py	/^CONFIG_ERROR = """$/;"	v
CONTENT	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/index.html	/^<A HREF=".cell.html" name="CONTENT">$/;"	a
CUDA_CHECK	simwave/kernel/backend/c_code/compression/gradient.cpp	/^#define CUDA_CHECK(/;"	d	file:
CascadedFormatSpecHeader	simwave/kernel/backend/include/nvcomp/cascaded.hpp	/^struct CascadedFormatSpecHeader {$/;"	s	namespace:nvcomp
CascadedManager	simwave/kernel/backend/include/nvcomp/cascaded.hpp	/^struct CascadedManager : PimplManager {$/;"	s	namespace:nvcomp
CheckpointStruct	simwave/kernel/backend/c_code/compression/gradient.cpp	/^struct CheckpointStruct{             $/;"	s	file:
CheckpointStruct	simwave/kernel/backend/c_code/multi/gradient.cpp	/^struct CheckpointStruct{             $/;"	s	file:
CheckpointStruct	simwave/kernel/backend/c_code/normal/gradient.cpp	/^struct CheckpointStruct{             $/;"	s	file:
ChecksumPolicy	simwave/kernel/backend/include/nvcomp/shared_types.h	/^enum ChecksumPolicy {$/;"	g
Classic Dataset Descriptions	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<title>Classic Dataset Descriptions <\/title>$/;"	j
Classic Datasets of the SEG Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<\/h2>$/;"	i
Click on Images to see fullsize image	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/tests.html	/^<h3> Click on Images to see fullsize image <\/h3>$/;"	j
Compiler	simwave/kernel/backend/compiler.py	/^class Compiler:$/;"	c
CompressionConfig	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^struct CompressionConfig {$/;"	s	namespace:nvcomp
ComputeAndNoVerify	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  ComputeAndNoVerify = 1,$/;"	e	enum:ChecksumPolicy
ComputeAndVerify	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  ComputeAndVerify= 4$/;"	e	enum:ChecksumPolicy
ComputeAndVerifyIfPresent	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  ComputeAndVerifyIfPresent = 3,$/;"	e	enum:ChecksumPolicy
Contacts	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/bottom.html	/^<\/title>$/;"	j
Contributors	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/intro.html	/^<h2> Contributors <\/h2>$/;"	i
Courtesy Kay Wyatt and Warren Neff, Phillips	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/illum.html	/^<h3> Courtesy Kay Wyatt and Warren Neff, Phillips<\/h3>$/;"	j
Courtesy Mike O'Brien and John Etgen, Amoco Corp.	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/2dzero.html	/^<h3> Courtesy Mike O'Brien and John Etgen, Amoco Corp. <\/h3>$/;"	j
DT	simwave/kernel/backend/c_code/multi/wave.cpp	/^#define DT /;"	d	file:
DX	simwave/kernel/backend/c_code/multi/wave.cpp	/^#define DX /;"	d	file:
DY	simwave/kernel/backend/c_code/multi/wave.cpp	/^#define DY /;"	d	file:
DZ	simwave/kernel/backend/c_code/multi/wave.cpp	/^#define DZ /;"	d	file:
DecompressionConfig	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^struct DecompressionConfig {$/;"	s	namespace:nvcomp
Description of Acquisition Phase B	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/PhaseB.html	/^<h1> Description of Acquisition Phase B<\/h1>$/;"	h
Description of Acquisition Phase C	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/PhaseC.html	/^<h1> Description of Acquisition Phase C<\/h1>$/;"	h
Description of Acquistion	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/PhaseA.html	/^<h1> Description of Acquistion <\/h1>$/;"	h
Description of SEG/EAEG Salt Model Velocities	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/velocity.html	/^<h1> Description of SEG\/EAEG Salt Model Velocities <\/h1>$/;"	h
Description of Velocities used in SEG/EAEG Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/velocity.html	/^<title>Description of Velocities used in SEG\/EAEG Salt Model <\/title>$/;"	j
For Information about obtaining tape copies of the Classic Datasets Press here	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<\/h3>$/;"	j
Frequently Asked Questions about the SEG/EAEG Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/fquestions.html	/^<title>Frequently Asked Questions about the SEG\/EAEG Salt Model<\/title>$/;"	j
GdeflateManager	simwave/kernel/backend/include/nvcomp/gdeflate.hpp	/^struct GdeflateManager : PimplManager {$/;"	s	namespace:nvcomp
HANDLERS	simwave/_version.py	/^HANDLERS = {}$/;"	v
HANDLERS	versioneer.py	/^HANDLERS = {}$/;"	v
INIT_PY_SNIPPET	versioneer.py	/^INIT_PY_SNIPPET = """$/;"	v
Illumination Studies of Salt Body	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/illum.html	/^<\/h1>$/;"	h
Images & Animation Courtesy Pierre Duclos, IFP Grid size of Model is dx=dy=20 meters	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/tests.html	/^Grid size of Model is  dx=dy=20 meters <\/h3>$/;"	j
Images of Constructed SEG/EAEG Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/construction.html	/^<title> Images of Constructed SEG\/EAEG Salt Model <\/title>$/;"	j
Imaging Challenges	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/features.html	/^<\/h2>$/;"	i
Index Frame	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/menu.html	/^<TITLE> Index Frame <\/TITLE>$/;"	j
Introduction to the SEG/EAEG Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/PhaseA.html	/^<title>Introduction to the SEG\/EAEG Salt Model<\/title>$/;"	j
Introduction to the SEG/EAEG Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/PhaseB.html	/^<title>Introduction to the SEG\/EAEG Salt Model<\/title>$/;"	j
Introduction to the SEG/EAEG Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/intro.html	/^<title>Introduction to the SEG\/EAEG Salt Model<\/title>$/;"	j
LDFLAGS	simwave/kernel/backend/c_code/multi/Makefile	/^LDFLAGS = -lm -lcudart$/;"	m
LONG_VERSION_PY	simwave/_version.py	/^LONG_VERSION_PY = {}$/;"	v
LONG_VERSION_PY	versioneer.py	/^LONG_VERSION_PY = {}$/;"	v
LZ4FormatSpecHeader	simwave/kernel/backend/include/nvcomp/lz4.hpp	/^struct LZ4FormatSpecHeader {$/;"	s	namespace:nvcomp
LZ4Manager	simwave/kernel/backend/include/nvcomp/lz4.hpp	/^struct LZ4Manager : PimplManager {$/;"	s	namespace:nvcomp
MPeg Animations	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/animations.html	/^<\/h1>$/;"	h
MPeg Animations	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/animations.html	/^<title>MPeg Animations<\/title>$/;"	j
Middleware	simwave/kernel/backend/middleware.py	/^class Middleware:$/;"	c
Migration Results performed with exact velocity model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/2dzero.html	/^<h3> Migration Results performed with exact velocity model<\/h3>$/;"	j
Model Construction	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/construction.html	/^<h2>Model Construction <\/h2>$/;"	i
Model Goals	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/goals.html	/^<title>Model Goals  <\/title>$/;"	j
MultiWavelet	simwave/kernel/frontend/source.py	/^class MultiWavelet(Wavelet):$/;"	c
NUM_DEVICES	simwave/kernel/backend/c_code/multi/gradient.cpp	/^#define NUM_DEVICES /;"	d	file:
NVCOMP_ANS_H	simwave/kernel/backend/include/nvcomp/ans.h	/^#define NVCOMP_ANS_H$/;"	d
NVCOMP_API_HPP	simwave/kernel/backend/include/nvcomp/nvcomp.hpp	/^#define NVCOMP_API_HPP$/;"	d
NVCOMP_BITCOMP_H	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^#define NVCOMP_BITCOMP_H$/;"	d
NVCOMP_CASCADED_H	simwave/kernel/backend/include/nvcomp/cascaded.h	/^#define NVCOMP_CASCADED_H$/;"	d
NVCOMP_DEFLATE_H	simwave/kernel/backend/include/nvcomp/deflate.h	/^#define NVCOMP_DEFLATE_H$/;"	d
NVCOMP_GDEFLATE_H	simwave/kernel/backend/include/nvcomp/gdeflate.h	/^#define NVCOMP_GDEFLATE_H$/;"	d
NVCOMP_H	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^#define NVCOMP_H$/;"	d
NVCOMP_LZ4_H	simwave/kernel/backend/include/nvcomp/lz4.h	/^#define NVCOMP_LZ4_H$/;"	d
NVCOMP_MAJOR_VERSION	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^#define NVCOMP_MAJOR_VERSION /;"	d
NVCOMP_MINOR_VERSION	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^#define NVCOMP_MINOR_VERSION /;"	d
NVCOMP_PATCH_VERSION	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^#define NVCOMP_PATCH_VERSION /;"	d
NVCOMP_SNAPPY_H	simwave/kernel/backend/include/nvcomp/snappy.h	/^#define NVCOMP_SNAPPY_H$/;"	d
NVCOMP_TYPE_BITS	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^  NVCOMP_TYPE_BITS = 0xff    \/\/ 1b$/;"	e	enum:nvcompType_t
NVCOMP_TYPE_CHAR	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^  NVCOMP_TYPE_CHAR = 0,      \/\/ 1B$/;"	e	enum:nvcompType_t
NVCOMP_TYPE_INT	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^  NVCOMP_TYPE_INT = 4,       \/\/ 4B$/;"	e	enum:nvcompType_t
NVCOMP_TYPE_LONGLONG	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^  NVCOMP_TYPE_LONGLONG = 6,  \/\/ 8B$/;"	e	enum:nvcompType_t
NVCOMP_TYPE_SHORT	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^  NVCOMP_TYPE_SHORT = 2,     \/\/ 2B$/;"	e	enum:nvcompType_t
NVCOMP_TYPE_UCHAR	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^  NVCOMP_TYPE_UCHAR = 1,     \/\/ 1B$/;"	e	enum:nvcompType_t
NVCOMP_TYPE_UINT	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^  NVCOMP_TYPE_UINT = 5,      \/\/ 4B$/;"	e	enum:nvcompType_t
NVCOMP_TYPE_ULONGLONG	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^  NVCOMP_TYPE_ULONGLONG = 7, \/\/ 8B$/;"	e	enum:nvcompType_t
NVCOMP_TYPE_USHORT	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^  NVCOMP_TYPE_USHORT = 3,    \/\/ 2B$/;"	e	enum:nvcompType_t
NVCOMP_Zstd_H	simwave/kernel/backend/include/nvcomp/zstd.h	/^#define NVCOMP_Zstd_H$/;"	d
NVCompException	simwave/kernel/backend/include/nvcomp/nvcomp.hpp	/^  NVCompException(nvcompStatus_t err, const std::string& msg) :$/;"	f	class:nvcomp::NVCompException
NVCompException	simwave/kernel/backend/include/nvcomp/nvcomp.hpp	/^class NVCompException : public std::runtime_error$/;"	c	namespace:nvcomp
NoComputeAndVerifyIfPresent	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  NoComputeAndVerifyIfPresent = 2,$/;"	e	enum:ChecksumPolicy
NoComputeNoVerify	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  NoComputeNoVerify = 0,$/;"	e	enum:ChecksumPolicy
NotThisMethod	simwave/_version.py	/^class NotThisMethod(Exception):$/;"	c
NotThisMethod	versioneer.py	/^class NotThisMethod(Exception):$/;"	c
OBJFILES	simwave/kernel/backend/c_code/multi/Makefile	/^OBJFILES = wave.o$/;"	m
Participants of the Salt Working Group	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/participants.html	/^<\/h2>$/;"	i
Phase A Classic Dataset 0.	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<h2> Phase A Classic Dataset 0.  <\/h2>$/;"	i
Phase A Classic Dataset 1.	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<h2> Phase A Classic Dataset 1. <\/h2>$/;"	i
Phase A Classic Dataset 2.	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<h2> Phase A Classic Dataset 2. <\/h2> $/;"	i
Phase B Classic Dataset 1.	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<h2> Phase B Classic Dataset 1. <\/h2>$/;"	i
Phase B Classic Dataset 2.	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<h2> Phase B Classic Dataset 2. <\/h2>$/;"	i
Phase C Classic Dataset 1	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<h2> Phase C Classic Dataset 1 <\/h2>$/;"	i
Phase C Classic Dataset 2	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<h2> Phase C Classic Dataset 2 <\/h2>$/;"	i
Phase C Classic Dataset 3	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/Classic.html	/^<h2> Phase C Classic Dataset 3 <\/h2>$/;"	i
PimplManager	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  PimplManager() $/;"	f	struct:nvcomp::PimplManager
PimplManager	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^struct PimplManager : nvcompManagerBase {$/;"	s	namespace:nvcomp
Receiver	simwave/kernel/frontend/source.py	/^Receiver = Source$/;"	v
Results from the SEG/EAEG Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/results.html	/^<title>Results from the SEG\/EAEG Salt Model<\/title>$/;"	j
RickerWavelet	simwave/kernel/frontend/source.py	/^class RickerWavelet(Wavelet):$/;"	c
SAMPLE_CONFIG	versioneer.py	/^SAMPLE_CONFIG = """$/;"	v
SEG/EAEG Modeling Committee Goals	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/goals.html	/^<\/h1>$/;"	h
SEG/EAEG Salt Model Phase C Acquisition	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/PhaseC.html	/^<title>SEG\/EAEG Salt Model Phase C Acquisition <\/title>$/;"	j
SEG/EAGE Salt Model Home Page	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/top.html	/^<\/title>$/;"	j
SEG/EAGE Salt Model Homepage	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/top.html	/^<\/center><\/h1>$/;"	h
SHORT_VERSION_PY	versioneer.py	/^SHORT_VERSION_PY = """$/;"	v
SPACE_ORDER	simwave/kernel/backend/c_code/multi/wave.cpp	/^#define SPACE_ORDER /;"	d	file:
STENCIL_RADIUS	simwave/kernel/backend/c_code/multi/wave.cpp	/^#define STENCIL_RADIUS /;"	d	file:
SUBSALT Features	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/features.html	/^<\/h2>$/;"	i
Salt Features	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/features.html	/^<title>Salt Features  <\/title>$/;"	j
Salt Features	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/salt_features.html	/^<title>Salt Features  <\/title>$/;"	j
Salt Model Dominant Features of Salt	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/features.html	/^<\/h2>$/;"	i
Salt Model Dominant Features of Salt	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/salt_features.html	/^<\/h1>$/;"	h
Salt Model Dominant Features of Sediments	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/features.html	/^<\/h2>$/;"	i
Salt Working Group	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/participants.html	/^<title>Salt Working Group  <\/title>$/;"	j
Salt Working Group	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/users.html	/^<title>Salt Working Group  <\/title>$/;"	j
SnappyFormatSpecHeader	simwave/kernel/backend/include/nvcomp/snappy.hpp	/^struct SnappyFormatSpecHeader {$/;"	s	namespace:nvcomp
SnappyManager	simwave/kernel/backend/include/nvcomp/snappy.hpp	/^struct SnappyManager : PimplManager {$/;"	s	namespace:nvcomp
Solver	simwave/kernel/frontend/solver.py	/^class Solver:$/;"	c
Source	simwave/kernel/frontend/source.py	/^class Source:$/;"	c
SpaceModel	simwave/kernel/frontend/model.py	/^class SpaceModel:$/;"	c
TARGET	simwave/kernel/backend/c_code/multi/Makefile	/^TARGET = wave$/;"	m
Tape Copies of Data	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/paul.html	/^<title>Tape Copies of Data  <\/title>$/;"	j
TimeModel	simwave/kernel/frontend/model.py	/^class TimeModel:$/;"	c
TypeOf	simwave/kernel/backend/include/nvcomp/nvcomp.hpp	/^inline nvcompType_t TypeOf()$/;"	f	namespace:nvcomp	typeref:typename:nvcompType_t
TypeOfConst	simwave/kernel/backend/include/nvcomp/nvcomp.hpp	/^__device__ __host__ constexpr nvcompType_t TypeOfConst()$/;"	f	namespace:nvcomp	typeref:typename:__device__ __host__ nvcompType_t
V	simwave/kernel/backend/c_code/multi/wave.cpp	/^#define V /;"	d	file:
VersioneerBadRootError	versioneer.py	/^class VersioneerBadRootError(Exception):$/;"	c
VersioneerConfig	simwave/_version.py	/^class VersioneerConfig:$/;"	c
VersioneerConfig	versioneer.py	/^class VersioneerConfig:$/;"	c
Virtual Reality Help	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/vr.html	/^<title>Virtual Reality Help<\/title>$/;"	j
Visualizing the SEG/EAEG Salt Model	examples/ExtractedModel/Salt_Model_3D/3-D_Salt_Model/README/INFO/visualization.html	/^<title>Visualizing the SEG\/EAEG Salt Model<\/title>$/;"	j
Wavelet	simwave/kernel/frontend/source.py	/^class Wavelet:$/;"	c
__all__	simwave/__init__.py	/^__all__ = [$/;"	v
__all__	simwave/io/__init__.py	/^__all__ = ["read_2D_segy"]$/;"	v
__all__	simwave/kernel/__init__.py	/^__all__ = [$/;"	v
__all__	simwave/kernel/backend/__init__.py	/^__all__ = [$/;"	v
__all__	simwave/kernel/frontend/__init__.py	/^__all__ = [$/;"	v
__all__	simwave/plots/__init__.py	/^__all__ = [$/;"	v
__anon1a516fc70108	simwave/kernel/backend/include/nvcomp/zstd.h	/^{$/;"	s
__anon545a52040108	simwave/kernel/backend/include/nvcomp/ans.h	/^{$/;"	s
__anon5526e81c0108	simwave/kernel/backend/include/nvcomp/lz4.h	/^{$/;"	s
__anon5526e81c0208	simwave/kernel/backend/include/nvcomp/lz4.h	/^{$/;"	s
__anon5e06f6500108	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^{$/;"	s
__anon5e06f6500208	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^{$/;"	s
__anon717ab5aa0108	simwave/kernel/backend/include/nvcomp/cascaded.h	/^{$/;"	s
__anon717ab5aa0208	simwave/kernel/backend/include/nvcomp/cascaded.h	/^{$/;"	s
__anon744df0b70108	simwave/kernel/backend/include/nvcomp/deflate.h	/^{$/;"	s
__anond2681d5d0108	simwave/kernel/backend/include/nvcomp/snappy.h	/^{$/;"	s
__anonf3ea127e0108	simwave/kernel/backend/include/nvcomp/gdeflate.h	/^{$/;"	s
__init__	simwave/kernel/backend/compiler.py	/^    def __init__(self, cc, cflags):$/;"	m	class:Compiler
__init__	simwave/kernel/backend/middleware.py	/^    def __init__(self, compiler):$/;"	m	class:Middleware
__init__	simwave/kernel/frontend/model.py	/^    def __init__(self, bounding_box, grid_spacing, velocity_model,$/;"	m	class:SpaceModel
__init__	simwave/kernel/frontend/model.py	/^    def __init__(self, space_model, tf, dt=None):$/;"	m	class:TimeModel
__init__	simwave/kernel/frontend/solver.py	/^    def __init__(self, space_model, time_model, sources,$/;"	m	class:Solver
__init__	simwave/kernel/frontend/source.py	/^    def __init__(self, function, **kwargs):$/;"	m	class:Wavelet
__init__	simwave/kernel/frontend/source.py	/^    def __init__(self, peak_frequency, time_model, amplitude=1):$/;"	m	class:RickerWavelet
__init__	simwave/kernel/frontend/source.py	/^    def __init__(self, space_model, coordinates, window_radius=4):$/;"	m	class:Source
__init__	simwave/kernel/frontend/source.py	/^    def __init__(self, values, time_model):$/;"	m	class:MultiWavelet
__version__	simwave/__init__.py	/^__version__ = get_versions()['version']$/;"	v
_argtypes	simwave/kernel/backend/middleware.py	/^    def _argtypes(self, **kwargs):$/;"	m	class:Middleware
_build_exe	versioneer.py	/^        from cx_Freeze.dist import build_exe as _build_exe$/;"	Y	function:get_cmdclass	file:	nameref:unknown:build_exe
_build_py	versioneer.py	/^        from distutils.command.build_py import build_py as _build_py$/;"	Y	function:get_cmdclass	file:	nameref:unknown:build_py
_build_py	versioneer.py	/^        from setuptools.command.build_py import build_py as _build_py$/;"	Y	function:get_cmdclass	file:	nameref:unknown:build_py
_convert_type_to_ctypes	simwave/kernel/backend/middleware.py	/^    def _convert_type_to_ctypes(self, type):$/;"	m	class:Middleware
_exec_forward	simwave/kernel/backend/middleware.py	/^    def _exec_forward(self, operator, c_file, **kwargs):$/;"	m	class:Middleware
_exec_gradient	simwave/kernel/backend/middleware.py	/^    def _exec_gradient(self, c_file, **kwargs):$/;"	m	class:Middleware
_function	simwave/kernel/frontend/source.py	/^    def _function(self, peak_frequency, time_model, amplitude):$/;"	m	class:RickerWavelet
_keys_in_order	simwave/kernel/backend/middleware.py	/^    def _keys_in_order(self):$/;"	m	class:Middleware
_py2exe	versioneer.py	/^            from py2exe.build_exe import py2exe as _py2exe  # py2$/;"	Y	function:get_cmdclass	file:	nameref:unknown:py2exe
_py2exe	versioneer.py	/^            from py2exe.distutils_buildexe import py2exe as _py2exe  # py3$/;"	Y	function:get_cmdclass	file:	nameref:unknown:py2exe
_sdist	versioneer.py	/^        from distutils.command.sdist import sdist as _sdist$/;"	Y	function:get_cmdclass	file:	nameref:unknown:sdist
_sdist	versioneer.py	/^        from setuptools.command.sdist import sdist as _sdist$/;"	Y	function:get_cmdclass	file:	nameref:unknown:sdist
add_halo_region	simwave/kernel/frontend/model.py	/^    def add_halo_region(self, u):$/;"	m	class:SpaceModel
adjusted_grid_positions	simwave/kernel/frontend/source.py	/^    def adjusted_grid_positions(self):$/;"	m	class:Source
algo	simwave/kernel/backend/include/nvcomp/bitcomp.hpp	/^  int algo;$/;"	m	struct:nvcomp::BitcompFormatSpecHeader	typeref:typename:int
algo	simwave/kernel/backend/include/nvcomp/deflate.h	/^  int algo;$/;"	m	struct:__anon744df0b70108	typeref:typename:int
algo	simwave/kernel/backend/include/nvcomp/gdeflate.h	/^  int algo;$/;"	m	struct:__anonf3ea127e0108	typeref:typename:int
algorithm_type	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^  int algorithm_type;$/;"	m	struct:__anon5e06f6500108	typeref:typename:int
algorithm_type	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^  int algorithm_type;$/;"	m	struct:__anon5e06f6500208	typeref:typename:int
all	simwave/kernel/backend/c_code/multi/Makefile	/^all: $(TARGET)$/;"	t
amplitude	simwave/kernel/frontend/source.py	/^    def amplitude(self):$/;"	m	class:RickerWavelet
args	examples/fwi_3D_gpu.py	/^    args = parser.parse_args()$/;"	v
boolean_options	versioneer.py	/^        boolean_options = []$/;"	v	class:get_cmdclass.cmd_version
boundary_condition_options	examples/fwi_3D_gpu.py	/^    boundary_condition_options = {$/;"	v
bounding_box	simwave/kernel/frontend/model.py	/^    def bounding_box(self):$/;"	m	class:SpaceModel
calc_saving_stride	simwave/kernel/frontend/solver.py	/^    def calc_saving_stride(self, num_checkpoints):$/;"	m	class:Solver
calculate_dt	simwave/kernel/frontend/fd.py	/^def calculate_dt(dimension, space_order, grid_spacing, velocity_model):$/;"	f
calculate_true_seimogram	examples/gradient_3D.py	/^def calculate_true_seimogram(velocity_model):$/;"	f
callback	examples/fwi_3D_gpu.py	/^def callback(xk):$/;"	f
camembert_velocity_model	examples/gradient_3D.py	/^def camembert_velocity_model(grid_size, radius):$/;"	f
check_dir	examples/fwi_3D_gpu.py	/^def check_dir(dir_pattern):$/;"	f
check_file	examples/fwi_3D_gpu.py	/^def check_file(cur_dir, file_pattern):$/;"	f
checkpoints	simwave/kernel/frontend/solver.py	/^    def checkpoints(self, num_checkpoints):$/;"	m	class:Solver
checksums_present	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  bool checksums_present;$/;"	m	struct:nvcomp::DecompressionConfig	typeref:typename:bool
chunk_size	simwave/kernel/backend/include/nvcomp/cascaded.h	/^  size_t chunk_size;$/;"	m	struct:__anon717ab5aa0208	typeref:typename:size_t
chunk_size	simwave/kernel/backend/include/nvcomp/lz4.h	/^  size_t chunk_size;$/;"	m	struct:__anon5526e81c0108	typeref:typename:size_t
clean	simwave/kernel/backend/c_code/multi/Makefile	/^clean:$/;"	t
client	examples/fwi_3D_gpu.py	/^        client = Client(cluster)$/;"	v
cluster	examples/fwi_3D_gpu.py	/^        cluster = LocalCluster(n_workers=4, threads_per_worker=9, death_timeout=600)$/;"	v
cmd	versioneer.py	/^    cmd = sys.argv[1]$/;"	v
cmd_build_exe	versioneer.py	/^        class cmd_build_exe(_build_exe):$/;"	c	function:get_cmdclass	file:
cmd_build_py	versioneer.py	/^    class cmd_build_py(_build_py):$/;"	c	function:get_cmdclass	file:
cmd_py2exe	versioneer.py	/^        class cmd_py2exe(_py2exe):$/;"	c	function:get_cmdclass	file:
cmd_sdist	versioneer.py	/^    class cmd_sdist(_sdist):$/;"	c	function:get_cmdclass	file:
cmd_version	versioneer.py	/^    class cmd_version(Command):$/;"	c	function:get_cmdclass	file:
coefficients	simwave/kernel/frontend/fd.py	/^def coefficients(derivative_order, space_order):$/;"	f
compile	simwave/kernel/backend/compiler.py	/^    def compile(self, float_precision, program_path):$/;"	m	class:Compiler
compiler	examples/acoustic_3D.py	/^compiler = Compiler($/;"	v
compiler	simwave/kernel/backend/middleware.py	/^    def compiler(self):$/;"	m	class:Middleware
compiler	simwave/kernel/frontend/solver.py	/^    def compiler(self):$/;"	m	class:Solver
compiler_options	examples/acoustic_3D.py	/^compiler_options = {$/;"	v
compiler_options	examples/fwi_3D_gpu.py	/^    compiler_options = {$/;"	v
compiler_options	examples/gradient_3D.py	/^compiler_options = {  $/;"	v
compress	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  virtual void compress($/;"	f	struct:nvcomp::PimplManager	typeref:typename:void
compute_checksums	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  bool compute_checksums;$/;"	m	struct:nvcomp::CompressionConfig	typeref:typename:bool
compute_gradient	examples/gradient_3D.py	/^def compute_gradient(velocity_model, recv_true):$/;"	f
config_boundary	simwave/kernel/frontend/model.py	/^    def config_boundary(self, damping_length=0.0, damping_polynomial_degree=3, damping_alpha=0.0/;"	m	class:SpaceModel
configparser	versioneer.py	/^    import ConfigParser as configparser$/;"	I	nameref:module:ConfigParser
configure_compression	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  virtual CompressionConfig configure_compression(const size_t decomp_buffer_size) $/;"	f	struct:nvcomp::PimplManager	typeref:typename:CompressionConfig
configure_compression_cur	simwave/kernel/backend/c_code/compression/gradient.cpp	/^  CompressionConfig& configure_compression_cur;$/;"	m	struct:CheckpointStruct	typeref:typename:CompressionConfig &	file:
configure_compression_prev	simwave/kernel/backend/c_code/compression/gradient.cpp	/^  CompressionConfig& configure_compression_prev;$/;"	m	struct:CheckpointStruct	typeref:typename:CompressionConfig &	file:
configure_decompression	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  virtual DecompressionConfig configure_decompression(const CompressionConfig& comp_config)$/;"	f	struct:nvcomp::PimplManager	typeref:typename:DecompressionConfig
configure_decompression	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  virtual DecompressionConfig configure_decompression(const uint8_t* comp_buffer) $/;"	f	struct:nvcomp::PimplManager	typeref:typename:DecompressionConfig
coordinates	simwave/kernel/frontend/source.py	/^    def coordinates(self):$/;"	m	class:Source
count	simwave/kernel/frontend/source.py	/^    def count(self):$/;"	m	class:Source
create_out_dir	examples/fwi_3D_gpu.py	/^def create_out_dir(dirname):$/;"	f
create_receivers	examples/fwi_3D_gpu.py	/^def create_receivers(space_model, receiver_options, wr=4):$/;"	f
create_solver	examples/fwi_3D_gpu.py	/^def create_solver(velocity_model, source_location, options):$/;"	f
create_solver	examples/gradient_3D.py	/^def create_solver(velocity_model):$/;"	f
create_source	examples/fwi_3D_gpu.py	/^def create_source(space_model, location, wr=4):$/;"	f
create_sources	examples/fwi_3D_gpu.py	/^def create_sources(space_model, source_options, wr=4):$/;"	f
create_space_model	examples/fwi_3D_gpu.py	/^def create_space_model(velocity_model, space_options):$/;"	f
create_sphere_velocity_model	examples/fwi_3D_gpu.py	/^def create_sphere_velocity_model(space_options):$/;"	f
create_time_model	examples/fwi_3D_gpu.py	/^def create_time_model(space_model, time_options):$/;"	f
create_wavelet	examples/fwi_3D_gpu.py	/^def create_wavelet(time_model, wavelet_options):$/;"	f
crop	examples/fwi_3D_gpu.py	/^def crop(u, options):$/;"	f
current	simwave/kernel/backend/c_code/compression/gradient.cpp	/^  f_type *current;$/;"	m	struct:CheckpointStruct	typeref:typename:f_type *	file:
current	simwave/kernel/backend/c_code/multi/gradient.cpp	/^  f_type *current;$/;"	m	struct:CheckpointStruct	typeref:typename:f_type *	file:
current	simwave/kernel/backend/c_code/normal/gradient.cpp	/^  f_type *current;$/;"	m	struct:CheckpointStruct	typeref:typename:f_type *	file:
damping_alpha	simwave/kernel/frontend/model.py	/^    def damping_alpha(self):$/;"	m	class:SpaceModel
damping_length	simwave/kernel/frontend/model.py	/^    def damping_length(self):$/;"	m	class:SpaceModel
damping_mask	simwave/kernel/frontend/model.py	/^    def damping_mask(self):$/;"	m	class:SpaceModel
damping_polynomial_degree	simwave/kernel/frontend/model.py	/^    def damping_polynomial_degree(self):$/;"	m	class:SpaceModel
data_type	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^  nvcompType_t data_type;$/;"	m	struct:__anon5e06f6500208	typeref:typename:nvcompType_t
data_type	simwave/kernel/backend/include/nvcomp/bitcomp.hpp	/^  nvcompType_t data_type;$/;"	m	struct:nvcomp::BitcompFormatSpecHeader	typeref:typename:nvcompType_t
data_type	simwave/kernel/backend/include/nvcomp/lz4.h	/^  nvcompType_t data_type;$/;"	m	struct:__anon5526e81c0208	typeref:typename:nvcompType_t
data_type	simwave/kernel/backend/include/nvcomp/lz4.hpp	/^  nvcompType_t data_type;$/;"	m	struct:nvcomp::LZ4FormatSpecHeader	typeref:typename:nvcompType_t
decomp_data_size	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  size_t decomp_data_size;$/;"	m	struct:nvcomp::DecompressionConfig	typeref:typename:size_t
decompress	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  virtual void decompress($/;"	f	struct:nvcomp::PimplManager	typeref:typename:void
decorate	simwave/_version.py	/^    def decorate(f):$/;"	f	function:register_vcs_handler	file:
decorate	versioneer.py	/^    def decorate(f):$/;"	f	function:register_vcs_handler	file:
density_model	simwave/kernel/frontend/model.py	/^    def density_model(self):$/;"	m	class:SpaceModel
description	versioneer.py	/^        description = "report generated version string"$/;"	v	class:get_cmdclass.cmd_version
dict_name	examples/fwi_3D_gpu.py	/^    dict_name = plot_options["name"]$/;"	v
dimension	simwave/kernel/frontend/model.py	/^    def dimension(self):$/;"	m	class:SpaceModel
dirname	examples/fwi_3D_gpu.py	/^    dirname = create_out_dir('experiment_salt_3D')$/;"	v
do_setup	versioneer.py	/^def do_setup():$/;"	f
do_vcs_install	versioneer.py	/^def do_vcs_install(manifest_in, versionfile_source, ipy):$/;"	f
domain_size	examples/gradient_3D.py	/^domain_size = 1000$/;"	v
download_progress_hook	examples/fwi_3D_gpu.py	/^def download_progress_hook(count, block_size, total_size):$/;"	f
dt	examples/gradient_3D.py	/^dt = 0.001$/;"	v
dt	simwave/kernel/frontend/model.py	/^    def dt(self):$/;"	m	class:TimeModel
dt	simwave/kernel/frontend/model.py	/^    def dt(self, value):$/;"	m	class:TimeModel
dtype	examples/gradient_3D.py	/^dtype = np.float32$/;"	v
dtype	simwave/kernel/frontend/model.py	/^    def dtype(self):$/;"	m	class:SpaceModel
dtype	simwave/kernel/frontend/model.py	/^    def dtype(self):$/;"	m	class:TimeModel
dtype	simwave/kernel/frontend/source.py	/^    def dtype(self):$/;"	m	class:MultiWavelet
dump_external_loop	examples/fwi_3D_gpu.py	/^def dump_external_loop(f, dirname):$/;"	f
dump_internal_loop	examples/fwi_3D_gpu.py	/^def dump_internal_loop(f, dirname):$/;"	f
dump_time	examples/fwi_3D_gpu.py	/^def dump_time(t, dirname):$/;"	f
errors	versioneer.py	/^        errors = do_setup()$/;"	v
eval_misfit_and_gradient_parallel	examples/fwi_3D_gpu.py	/^def eval_misfit_and_gradient_parallel(velocity_model, recv_all, options):$/;"	f
eval_misfit_and_gradient_serial	examples/fwi_3D_gpu.py	/^def eval_misfit_and_gradient_serial(velocity_model, recv_all, options):$/;"	f
eval_shape	examples/fwi_3D_gpu.py	/^def eval_shape(space_opts):$/;"	f
exec	simwave/kernel/backend/middleware.py	/^    def exec(self, operator, c_file, **kwargs):$/;"	m	class:Middleware
extended_density_model	simwave/kernel/frontend/model.py	/^    def extended_density_model(self):$/;"	m	class:SpaceModel
extended_grid	simwave/kernel/frontend/model.py	/^    def extended_grid(self):$/;"	m	class:SpaceModel
extended_shape	simwave/kernel/frontend/model.py	/^    def extended_shape(self):$/;"	m	class:SpaceModel
extended_velocity_model	simwave/kernel/frontend/model.py	/^    def extended_velocity_model(self):$/;"	m	class:SpaceModel
f_his_external	examples/fwi_3D_gpu.py	/^    f_his_external = []$/;"	v
f_his_internal	examples/fwi_3D_gpu.py	/^    f_his_internal = []$/;"	v
f_type	simwave/kernel/backend/c_code/compression/gradient.cpp	/^   typedef double f_type;$/;"	t	typeref:typename:double	file:
f_type	simwave/kernel/backend/c_code/compression/gradient.cpp	/^   typedef float f_type;$/;"	t	typeref:typename:float	file:
f_type	simwave/kernel/backend/c_code/forward.cpp	/^   typedef double f_type;$/;"	t	typeref:typename:double	file:
f_type	simwave/kernel/backend/c_code/forward.cpp	/^   typedef float f_type;$/;"	t	typeref:typename:float	file:
f_type	simwave/kernel/backend/c_code/forward.cpp	/^typedef float f_type;$/;"	t	typeref:typename:float	file:
f_type	simwave/kernel/backend/c_code/multi/gradient.cpp	/^   typedef double f_type;$/;"	t	typeref:typename:double	file:
f_type	simwave/kernel/backend/c_code/multi/gradient.cpp	/^   typedef float f_type;$/;"	t	typeref:typename:float	file:
f_type	simwave/kernel/backend/c_code/multi/gradient.cpp	/^typedef float f_type;$/;"	t	typeref:typename:float	file:
f_type	simwave/kernel/backend/c_code/normal/gradient.cpp	/^   typedef double f_type;$/;"	t	typeref:typename:double	file:
f_type	simwave/kernel/backend/c_code/normal/gradient.cpp	/^   typedef float f_type;$/;"	t	typeref:typename:float	file:
fd_coefficients	simwave/kernel/frontend/model.py	/^    def fd_coefficients(self, derivative_order):$/;"	m	class:SpaceModel
finalize_options	versioneer.py	/^        def finalize_options(self):$/;"	m	class:get_cmdclass.cmd_version
forward	simwave/kernel/backend/c_code/forward.cpp	/^extern "C" double forward(f_type *u, f_type *velocity, f_type *damp,$/;"	f	typeref:typename:double
forward_checkpoint	simwave/kernel/backend/c_code/compression/gradient.cpp	/^f_type* forward_checkpoint(f_type *u, f_type *snapshot_d_prev, f_type *snapshot_d_current, f_typ/;"	f	typeref:typename:f_type *
forward_checkpoint	simwave/kernel/backend/c_code/multi/gradient.cpp	/^f_type* forward_checkpoint(f_type *u, f_type *snapshot_d_prev, f_type *snapshot_d_current, f_typ/;"	f	typeref:typename:f_type *
forward_checkpoint	simwave/kernel/backend/c_code/normal/gradient.cpp	/^f_type* forward_checkpoint(f_type *u, f_type *snapshot_d_prev, f_type *snapshot_d_current, f_typ/;"	f	typeref:typename:f_type *
forward_no_saving	examples/fwi_3D_gpu.py	/^def forward_no_saving(velocity_model, source_location, options):$/;"	f
forward_no_saving	simwave/kernel/frontend/solver.py	/^    def forward_no_saving(self, c_file):$/;"	m	class:Solver
forward_saving	simwave/kernel/backend/c_code/compression/gradient.cpp	/^stack<CheckpointStruct> forward_saving(f_type *velocity, f_type *damp,$/;"	f	typeref:typename:stack<CheckpointStruct>
forward_saving	simwave/kernel/backend/c_code/multi/gradient.cpp	/^stack<CheckpointStruct> forward_saving(f_type *velocity, f_type *damp,$/;"	f	typeref:typename:stack<CheckpointStruct>
forward_saving	simwave/kernel/backend/c_code/normal/gradient.cpp	/^stack<CheckpointStruct> forward_saving(f_type *velocity, f_type *damp,$/;"	f	typeref:typename:stack<CheckpointStruct>
fun	examples/fwi_3D_gpu.py	/^def fun(velocity_model, recv_all, options):$/;"	f
function	simwave/kernel/frontend/source.py	/^    def function(self):$/;"	m	class:Wavelet
generate_synthetic_parallel	examples/fwi_3D_gpu.py	/^def generate_synthetic_parallel(velocity_model, options):$/;"	f
generate_synthetic_serial	examples/fwi_3D_gpu.py	/^def generate_synthetic_serial(velocity_model, options):$/;"	f
get	versioneer.py	/^    def get(parser, name):$/;"	f	function:get_config_from_root	file:
get_cmdclass	versioneer.py	/^def get_cmdclass():$/;"	f
get_compressed_output_size	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  virtual size_t get_compressed_output_size(uint8_t* comp_buffer)$/;"	f	struct:nvcomp::PimplManager	typeref:typename:size_t
get_config	simwave/_version.py	/^def get_config():$/;"	f
get_config_from_root	versioneer.py	/^def get_config_from_root(root):$/;"	f
get_error	simwave/kernel/backend/include/nvcomp/nvcomp.hpp	/^  nvcompStatus_t get_error() const$/;"	f	class:nvcomp::NVCompException	typeref:typename:nvcompStatus_t
get_filename	examples/fwi_3D_gpu.py	/^def get_filename(dirname, name_pattern):$/;"	f
get_kaiser_half_width	simwave/kernel/frontend/kws.py	/^def get_kaiser_half_width(half_width):$/;"	f
get_keywords	simwave/_version.py	/^def get_keywords():$/;"	f
get_kws_valid_points	simwave/kernel/frontend/kws.py	/^def get_kws_valid_points(kaiser_windowed_array):$/;"	f
get_required_scratch_buffer_size	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  virtual size_t get_required_scratch_buffer_size()$/;"	f	struct:nvcomp::PimplManager	typeref:typename:size_t
get_root	versioneer.py	/^def get_root():$/;"	f
get_source_points	simwave/kernel/frontend/kws.py	/^def get_source_points(grid_shape, source_location, half_width):$/;"	f
get_version	versioneer.py	/^def get_version():$/;"	f
get_versions	simwave/_version.py	/^def get_versions():$/;"	f
get_versions	versioneer.py	/^def get_versions(verbose=False):$/;"	f
git_get_keywords	simwave/_version.py	/^def git_get_keywords(versionfile_abs):$/;"	f
git_get_keywords	versioneer.py	/^def git_get_keywords(versionfile_abs):$/;"	f
git_pieces_from_vcs	simwave/_version.py	/^def git_pieces_from_vcs(tag_prefix, root, verbose, run_command=run_command):$/;"	f
git_pieces_from_vcs	versioneer.py	/^def git_pieces_from_vcs(tag_prefix, root, verbose, run_command=run_command):$/;"	f
git_versions_from_keywords	simwave/_version.py	/^def git_versions_from_keywords(keywords, tag_prefix, verbose):$/;"	f
git_versions_from_keywords	versioneer.py	/^def git_versions_from_keywords(keywords, tag_prefix, verbose):$/;"	f
grad	examples/gradient_3D.py	/^    grad = compute_gradient(velocity_model=smooth_vel, recv_true=recv_true)$/;"	v
grad	simwave/kernel/frontend/solver.py	/^    def grad(self):$/;"	m	class:Solver
gradient	simwave/kernel/backend/c_code/compression/gradient.cpp	/^extern "C" double gradient(f_type *v, f_type *grad, f_type *velocity, f_type *damp,$/;"	f	typeref:typename:double
gradient	simwave/kernel/backend/c_code/multi/gradient.cpp	/^extern "C" double gradient(f_type *v, f_type *grad, f_type *velocity, f_type *damp,$/;"	f	typeref:typename:double
gradient	simwave/kernel/backend/c_code/normal/gradient.cpp	/^extern "C" double gradient(f_type *v, f_type *grad, f_type *velocity, f_type *damp,$/;"	f	typeref:typename:double
gradient	simwave/kernel/frontend/solver.py	/^    def gradient(self, num_checkpoints, residual, c_file):$/;"	m	class:Solver
grid	simwave/kernel/frontend/model.py	/^    def grid(self):$/;"	m	class:SpaceModel
grid_positions	simwave/kernel/frontend/source.py	/^    def grid_positions(self):$/;"	m	class:Source
grid_size	examples/gradient_3D.py	/^    grid_size = domain_size \/\/ spacing + 1$/;"	v
grid_spacing	simwave/kernel/frontend/model.py	/^    def grid_spacing(self):$/;"	m	class:SpaceModel
half_coefficients	simwave/kernel/frontend/fd.py	/^def half_coefficients(derivative_order, space_order):$/;"	f
halo_pad_width	simwave/kernel/frontend/model.py	/^    def halo_pad_width(self):$/;"	m	class:SpaceModel
halo_size	simwave/kernel/frontend/model.py	/^    def halo_size(self):$/;"	m	class:SpaceModel
impl	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  std::shared_ptr<CompressionConfigImpl> impl;$/;"	m	struct:nvcomp::CompressionConfig	typeref:typename:std::shared_ptr<CompressionConfigImpl>
impl	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  std::shared_ptr<DecompressionConfigImpl> impl;$/;"	m	struct:nvcomp::DecompressionConfig	typeref:typename:std::shared_ptr<DecompressionConfigImpl>
impl	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  std::unique_ptr<nvcompManagerBase> impl;$/;"	m	struct:nvcomp::PimplManager	typeref:typename:std::unique_ptr<nvcompManagerBase>
index	simwave/kernel/backend/c_code/compression/gradient.cpp	/^  size_t index;$/;"	m	struct:CheckpointStruct	typeref:typename:size_t	file:
index	simwave/kernel/backend/c_code/multi/gradient.cpp	/^  int index;$/;"	m	struct:CheckpointStruct	typeref:typename:int	file:
index	simwave/kernel/backend/c_code/normal/gradient.cpp	/^  int index;$/;"	m	struct:CheckpointStruct	typeref:typename:int	file:
initialize_options	versioneer.py	/^        def initialize_options(self):$/;"	m	class:get_cmdclass.cmd_version
interpolate	simwave/kernel/frontend/model.py	/^    def interpolate(self, data):$/;"	m	class:SpaceModel
interpolated_points_and_values	simwave/kernel/frontend/source.py	/^    def interpolated_points_and_values(self):$/;"	m	class:Source
kaiser_windowing_sinc	simwave/kernel/frontend/kws.py	/^def kaiser_windowing_sinc(num_points, source_point, half_width):$/;"	f
kwargs	simwave/kernel/frontend/source.py	/^    def kwargs(self):$/;"	m	class:Wavelet
library	simwave/kernel/backend/middleware.py	/^    def library(self, dtype, operator, c_file):$/;"	m	class:Middleware
load_velocity_model_npy	examples/fwi_3D_gpu.py	/^def load_velocity_model_npy(filename):$/;"	f
load_velocity_model_url	examples/fwi_3D_gpu.py	/^def load_velocity_model_url(url):$/;"	f
m_err	simwave/kernel/backend/include/nvcomp/nvcomp.hpp	/^  nvcompStatus_t m_err;$/;"	m	class:nvcomp::NVCompException	typeref:typename:nvcompStatus_t
main	simwave/kernel/backend/c_code/multi/wave.cpp	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
make_release_tree	versioneer.py	/^        def make_release_tree(self, base_dir, files):$/;"	m	class:get_cmdclass.cmd_sdist
markers	pytest.ini	/^markers =$/;"	k	section:pytest
max_compressed_buffer_size	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  size_t max_compressed_buffer_size;$/;"	m	struct:nvcomp::CompressionConfig	typeref:typename:size_t
max_dir	examples/fwi_3D_gpu.py	/^def max_dir(dir_list):$/;"	f
max_file	examples/fwi_3D_gpu.py	/^def max_file(dir_list):$/;"	f
nbl	simwave/kernel/frontend/model.py	/^    def nbl(self):$/;"	m	class:SpaceModel
nbl_pad_width	simwave/kernel/frontend/model.py	/^    def nbl_pad_width(self):$/;"	m	class:SpaceModel
np	examples/acoustic_3D.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	examples/fwi_3D_gpu.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	examples/gradient_3D.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	simwave/io/io.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	simwave/kernel/backend/middleware.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	simwave/kernel/frontend/fd.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	simwave/kernel/frontend/kws.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	simwave/kernel/frontend/model.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	simwave/kernel/frontend/solver.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	simwave/kernel/frontend/source.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	simwave/plots/plot.py	/^import numpy as np$/;"	I	nameref:module:numpy
num_RLEs	simwave/kernel/backend/include/nvcomp/cascaded.h	/^  int num_RLEs;$/;"	m	struct:__anon717ab5aa0108	typeref:typename:int
num_RLEs	simwave/kernel/backend/include/nvcomp/cascaded.h	/^  int num_RLEs;$/;"	m	struct:__anon717ab5aa0208	typeref:typename:int
num_chunks	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  size_t num_chunks;$/;"	m	struct:nvcomp::CompressionConfig	typeref:typename:size_t
num_chunks	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  size_t num_chunks;$/;"	m	struct:nvcomp::DecompressionConfig	typeref:typename:size_t
num_deltas	simwave/kernel/backend/include/nvcomp/cascaded.h	/^  int num_deltas;$/;"	m	struct:__anon717ab5aa0108	typeref:typename:int
num_deltas	simwave/kernel/backend/include/nvcomp/cascaded.h	/^  int num_deltas;$/;"	m	struct:__anon717ab5aa0208	typeref:typename:int
num_sources	simwave/kernel/frontend/source.py	/^    def num_sources(self):$/;"	m	class:MultiWavelet
num_sources	simwave/kernel/frontend/source.py	/^    def num_sources(self):$/;"	m	class:Wavelet
nvcomp	simwave/kernel/backend/include/nvcomp/ans.hpp	/^namespace nvcomp {$/;"	n
nvcomp	simwave/kernel/backend/include/nvcomp/bitcomp.hpp	/^namespace nvcomp {$/;"	n
nvcomp	simwave/kernel/backend/include/nvcomp/cascaded.hpp	/^namespace nvcomp {$/;"	n
nvcomp	simwave/kernel/backend/include/nvcomp/gdeflate.hpp	/^namespace nvcomp {$/;"	n
nvcomp	simwave/kernel/backend/include/nvcomp/lz4.hpp	/^namespace nvcomp {$/;"	n
nvcomp	simwave/kernel/backend/include/nvcomp/nvcomp.hpp	/^namespace nvcomp$/;"	n
nvcomp	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^namespace nvcomp {$/;"	n
nvcomp	simwave/kernel/backend/include/nvcomp/nvcompManagerFactory.hpp	/^namespace nvcomp {$/;"	n
nvcomp	simwave/kernel/backend/include/nvcomp/snappy.hpp	/^namespace nvcomp {$/;"	n
nvcompANSType_t	simwave/kernel/backend/include/nvcomp/ans.h	/^typedef enum nvcompANSType_t {$/;"	g
nvcompANSType_t	simwave/kernel/backend/include/nvcomp/ans.h	/^} nvcompANSType_t;$/;"	t	typeref:enum:nvcompANSType_t
nvcompBatchedANSDefaultOpts	simwave/kernel/backend/include/nvcomp/ans.h	/^static const nvcompBatchedANSOpts_t nvcompBatchedANSDefaultOpts = {nvcomp_rANS};$/;"	v	typeref:typename:const nvcompBatchedANSOpts_t
nvcompBatchedANSOpts_t	simwave/kernel/backend/include/nvcomp/ans.h	/^} nvcompBatchedANSOpts_t;$/;"	t	typeref:struct:__anon545a52040108
nvcompBatchedBitcompDefaultOpts	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^static const nvcompBatchedBitcompFormatOpts nvcompBatchedBitcompDefaultOpts$/;"	v	typeref:typename:const nvcompBatchedBitcompFormatOpts
nvcompBatchedBitcompFormatOpts	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^} nvcompBatchedBitcompFormatOpts;$/;"	t	typeref:struct:__anon5e06f6500208
nvcompBatchedCascadedDefaultOpts	simwave/kernel/backend/include/nvcomp/cascaded.h	/^static const nvcompBatchedCascadedOpts_t nvcompBatchedCascadedDefaultOpts$/;"	v	typeref:typename:const nvcompBatchedCascadedOpts_t
nvcompBatchedCascadedOpts_t	simwave/kernel/backend/include/nvcomp/cascaded.h	/^} nvcompBatchedCascadedOpts_t;$/;"	t	typeref:struct:__anon717ab5aa0208
nvcompBatchedDeflateDefaultOpts	simwave/kernel/backend/include/nvcomp/deflate.h	/^static const nvcompBatchedDeflateOpts_t nvcompBatchedDeflateDefaultOpts = {0};$/;"	v	typeref:typename:const nvcompBatchedDeflateOpts_t
nvcompBatchedDeflateOpts_t	simwave/kernel/backend/include/nvcomp/deflate.h	/^} nvcompBatchedDeflateOpts_t;$/;"	t	typeref:struct:__anon744df0b70108
nvcompBatchedGdeflateDefaultOpts	simwave/kernel/backend/include/nvcomp/gdeflate.h	/^static const nvcompBatchedGdeflateOpts_t nvcompBatchedGdeflateDefaultOpts = {0};$/;"	v	typeref:typename:const nvcompBatchedGdeflateOpts_t
nvcompBatchedGdeflateOpts_t	simwave/kernel/backend/include/nvcomp/gdeflate.h	/^} nvcompBatchedGdeflateOpts_t;$/;"	t	typeref:struct:__anonf3ea127e0108
nvcompBatchedLZ4DefaultOpts	simwave/kernel/backend/include/nvcomp/lz4.h	/^static const nvcompBatchedLZ4Opts_t nvcompBatchedLZ4DefaultOpts = {NVCOMP_TYPE_CHAR};$/;"	v	typeref:typename:const nvcompBatchedLZ4Opts_t
nvcompBatchedLZ4Opts_t	simwave/kernel/backend/include/nvcomp/lz4.h	/^} nvcompBatchedLZ4Opts_t;$/;"	t	typeref:struct:__anon5526e81c0208
nvcompBatchedSnappyDefaultOpts	simwave/kernel/backend/include/nvcomp/snappy.h	/^static const nvcompBatchedSnappyOpts_t nvcompBatchedSnappyDefaultOpts = {0};$/;"	v	typeref:typename:const nvcompBatchedSnappyOpts_t
nvcompBatchedSnappyOpts_t	simwave/kernel/backend/include/nvcomp/snappy.h	/^} nvcompBatchedSnappyOpts_t;$/;"	t	typeref:struct:__anond2681d5d0108
nvcompBatchedZstdDefaultOpts	simwave/kernel/backend/include/nvcomp/zstd.h	/^static const nvcompBatchedZstdOpts_t nvcompBatchedZstdDefaultOpts = {0};$/;"	v	typeref:typename:const nvcompBatchedZstdOpts_t
nvcompBatchedZstdOpts_t	simwave/kernel/backend/include/nvcomp/zstd.h	/^} nvcompBatchedZstdOpts_t;$/;"	t	typeref:struct:__anon1a516fc70108
nvcompBitcompDefaultOpts	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^static const nvcompBitcompFormatOpts nvcompBitcompDefaultOpts = {0};$/;"	v	typeref:typename:const nvcompBitcompFormatOpts
nvcompBitcompFormatOpts	simwave/kernel/backend/include/nvcomp/bitcomp.h	/^} nvcompBitcompFormatOpts;$/;"	t	typeref:struct:__anon5e06f6500108
nvcompCascadedFormatOpts	simwave/kernel/backend/include/nvcomp/cascaded.h	/^} nvcompCascadedFormatOpts;$/;"	t	typeref:struct:__anon717ab5aa0108
nvcompErrorAlignment	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorAlignment = 17,$/;"	e	enum:nvcompStatus_t
nvcompErrorBadChecksum	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorBadChecksum = 13,$/;"	e	enum:nvcompStatus_t
nvcompErrorCannotDecompress	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorCannotDecompress = 12,$/;"	e	enum:nvcompStatus_t
nvcompErrorCannotVerifyChecksums	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorCannotVerifyChecksums = 14,$/;"	e	enum:nvcompStatus_t
nvcompErrorChunkSizeTooLarge	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorChunkSizeTooLarge = 18,$/;"	e	enum:nvcompStatus_t
nvcompErrorCudaError	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorCudaError = 1000,$/;"	e	enum:nvcompStatus_t
nvcompErrorInternal	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorInternal = 10000,$/;"	e	enum:nvcompStatus_t
nvcompErrorInvalidValue	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorInvalidValue = 10,$/;"	e	enum:nvcompStatus_t
nvcompErrorNotSupported	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorNotSupported = 11,$/;"	e	enum:nvcompStatus_t
nvcompErrorOutputBufferTooSmall	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorOutputBufferTooSmall = 15,$/;"	e	enum:nvcompStatus_t
nvcompErrorWrongHeaderLength	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompErrorWrongHeaderLength = 16,$/;"	e	enum:nvcompStatus_t
nvcompLZ4FormatOpts	simwave/kernel/backend/include/nvcomp/lz4.h	/^} nvcompLZ4FormatOpts;$/;"	t	typeref:struct:__anon5526e81c0108
nvcompManagerBase	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^struct nvcompManagerBase {$/;"	s	namespace:nvcomp
nvcompStatus_t	simwave/kernel/backend/include/nvcomp/shared_types.h	/^typedef enum nvcompStatus_t$/;"	g
nvcompStatus_t	simwave/kernel/backend/include/nvcomp/shared_types.h	/^} nvcompStatus_t;$/;"	t	typeref:enum:nvcompStatus_t
nvcompSuccess	simwave/kernel/backend/include/nvcomp/shared_types.h	/^  nvcompSuccess = 0,$/;"	e	enum:nvcompStatus_t
nvcompType_t	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^typedef enum nvcompType_t$/;"	g
nvcompType_t	simwave/kernel/backend/include/nvcomp/nvcomp.h	/^} nvcompType_t;$/;"	t	typeref:enum:nvcompType_t
nvcompZstdCompressionMaxAllowedChunkSize	simwave/kernel/backend/include/nvcomp/zstd.h	/^const size_t nvcompZstdCompressionMaxAllowedChunkSize = 1 << 16;$/;"	v	typeref:typename:const size_t
nvcomp_rANS	simwave/kernel/backend/include/nvcomp/ans.h	/^  nvcomp_rANS,$/;"	e	enum:nvcompANSType_t
obj_fun	examples/fwi_3D_gpu.py	/^def obj_fun(velocity_model, source_location, recv_true, options):$/;"	f
options	examples/fwi_3D_gpu.py	/^    options = {$/;"	v
options	simwave/kernel/backend/include/nvcomp/cascaded.hpp	/^  nvcompBatchedCascadedOpts_t options;$/;"	m	struct:nvcomp::CascadedFormatSpecHeader	typeref:typename:nvcompBatchedCascadedOpts_t
parser	examples/fwi_3D_gpu.py	/^    parser = argparse.ArgumentParser(description="""forward\/fwi example script,$/;"	v
peak_frequency	simwave/kernel/frontend/source.py	/^    def peak_frequency(self):$/;"	m	class:RickerWavelet
plot_options	examples/fwi_3D_gpu.py	/^    plot_options = {$/;"	v
plot_shotrecord	simwave/plots/plot.py	/^def plot_shotrecord(rec, file_name="shotrecord", colorbar=True,$/;"	f
plot_velocity_model	simwave/plots/plot.py	/^def plot_velocity_model(model, sources=None, receivers=None,$/;"	f
plot_wavefield	simwave/plots/plot.py	/^def plot_wavefield(wavefield, file_name="wavefield", colorbar=True,$/;"	f
plot_wavelet	simwave/plots/plot.py	/^def plot_wavelet(time_values, wavelet_values,$/;"	f
plt	examples/fwi_3D_gpu.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	simwave/plots/plot.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plus_or_dot	simwave/_version.py	/^def plus_or_dot(pieces):$/;"	f
plus_or_dot	versioneer.py	/^def plus_or_dot(pieces):$/;"	f
prev	simwave/kernel/backend/c_code/compression/gradient.cpp	/^  f_type *prev;$/;"	m	struct:CheckpointStruct	typeref:typename:f_type *	file:
prev	simwave/kernel/backend/c_code/multi/gradient.cpp	/^  f_type *prev;$/;"	m	struct:CheckpointStruct	typeref:typename:f_type *	file:
prev	simwave/kernel/backend/c_code/normal/gradient.cpp	/^  f_type *prev;$/;"	m	struct:CheckpointStruct	typeref:typename:f_type *	file:
propagation_time	examples/gradient_3D.py	/^propagation_time = .5$/;"	v
pytest	pytest.ini	/^[pytest]$/;"	s
read_2D_segy	simwave/io/io.py	/^def read_2D_segy(file):$/;"	f
readme	setup.py	/^    readme = f.read()$/;"	v
receiver	examples/acoustic_3D.py	/^receiver = Receiver($/;"	v
receiver_options	examples/fwi_3D_gpu.py	/^    receiver_options = {$/;"	v
receivers	simwave/kernel/frontend/solver.py	/^    def receivers(self):$/;"	m	class:Solver
recv	examples/acoustic_3D.py	/^u_full, recv = solver.forward()$/;"	v
recv_all	examples/fwi_3D_gpu.py	/^    recv_all = generate_synthetic_serial(vp, options)$/;"	v
recv_true	examples/gradient_3D.py	/^    recv_true = calculate_true_seimogram(velocity_model=tru_vel)$/;"	v
register_vcs_handler	simwave/_version.py	/^def register_vcs_handler(vcs, method):  # decorator$/;"	f
register_vcs_handler	versioneer.py	/^def register_vcs_handler(vcs, method):  # decorator$/;"	f
remove_halo_region	simwave/kernel/frontend/model.py	/^    def remove_halo_region(self, u):$/;"	m	class:SpaceModel
remove_halo_region_from_gradient	simwave/kernel/frontend/model.py	/^    def remove_halo_region_from_gradient(self, grad):$/;"	m	class:SpaceModel
remove_nbl	simwave/kernel/frontend/model.py	/^    def remove_nbl(self, u):$/;"	m	class:SpaceModel
remove_time_halo_region	simwave/kernel/frontend/model.py	/^    def remove_time_halo_region(self, u):$/;"	m	class:TimeModel
render	simwave/_version.py	/^def render(pieces, style):$/;"	f
render	versioneer.py	/^def render(pieces, style):$/;"	f
render_git_describe	simwave/_version.py	/^def render_git_describe(pieces):$/;"	f
render_git_describe	versioneer.py	/^def render_git_describe(pieces):$/;"	f
render_git_describe_long	simwave/_version.py	/^def render_git_describe_long(pieces):$/;"	f
render_git_describe_long	versioneer.py	/^def render_git_describe_long(pieces):$/;"	f
render_pep440	simwave/_version.py	/^def render_pep440(pieces):$/;"	f
render_pep440	versioneer.py	/^def render_pep440(pieces):$/;"	f
render_pep440_old	simwave/_version.py	/^def render_pep440_old(pieces):$/;"	f
render_pep440_old	versioneer.py	/^def render_pep440_old(pieces):$/;"	f
render_pep440_post	simwave/_version.py	/^def render_pep440_post(pieces):$/;"	f
render_pep440_post	versioneer.py	/^def render_pep440_post(pieces):$/;"	f
render_pep440_pre	simwave/_version.py	/^def render_pep440_pre(pieces):$/;"	f
render_pep440_pre	versioneer.py	/^def render_pep440_pre(pieces):$/;"	f
required	setup.py	/^    required = f.read().splitlines()$/;"	v
res	examples/fwi_3D_gpu.py	/^    res = minimize($/;"	v
reserved	simwave/kernel/backend/include/nvcomp/snappy.h	/^  int reserved;$/;"	m	struct:__anond2681d5d0108	typeref:typename:int
reserved	simwave/kernel/backend/include/nvcomp/zstd.h	/^  int reserved;$/;"	m	struct:__anon1a516fc70108	typeref:typename:int
ricker	examples/acoustic_3D.py	/^ricker = RickerWavelet(15.0, time_model)$/;"	v
run	versioneer.py	/^            def run(self):$/;"	m	class:get_cmdclass.cmd_build_exe
run	versioneer.py	/^            def run(self):$/;"	m	class:get_cmdclass.cmd_py2exe
run	versioneer.py	/^        def run(self):$/;"	m	class:get_cmdclass.cmd_build_py
run	versioneer.py	/^        def run(self):$/;"	m	class:get_cmdclass.cmd_sdist
run	versioneer.py	/^        def run(self):$/;"	m	class:get_cmdclass.cmd_version
run_command	simwave/_version.py	/^def run_command(commands, args, cwd=None, verbose=False, hide_stderr=False,$/;"	f
run_command	versioneer.py	/^def run_command(commands, args, cwd=None, verbose=False, hide_stderr=False,$/;"	f
save_grid	simwave/kernel/backend/c_code/multi/wave.cpp	/^void save_grid(size_t z_slice, size_t nx, size_t ny, double *grid){$/;"	f	typeref:typename:void
scan_setup_py	versioneer.py	/^def scan_setup_py():$/;"	f
selected_compiler	examples/acoustic_3D.py	/^selected_compiler = compiler_options['c']$/;"	v
selected_compiler	examples/fwi_3D_gpu.py	/^    selected_compiler = compiler_options[args.C]$/;"	v
selected_compiler	examples/gradient_3D.py	/^selected_compiler = compiler_options['multi']$/;"	v
set_scratch_buffer	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  virtual void set_scratch_buffer(uint8_t* new_scratch_buffer)$/;"	f	struct:nvcomp::PimplManager	typeref:typename:void
shape	simwave/kernel/frontend/model.py	/^    def shape(self):$/;"	m	class:SpaceModel
shot_record	simwave/kernel/frontend/solver.py	/^    def shot_record(self):$/;"	m	class:Solver
size_compressed_current	simwave/kernel/backend/c_code/compression/gradient.cpp	/^  size_t size_compressed_current;$/;"	m	struct:CheckpointStruct	typeref:typename:size_t	file:
size_compressed_prev	simwave/kernel/backend/c_code/compression/gradient.cpp	/^  size_t size_compressed_prev;$/;"	m	struct:CheckpointStruct	typeref:typename:size_t	file:
slice_pos	examples/fwi_3D_gpu.py	/^    slice_pos = options["plot_options"]["slice_pos"]$/;"	v
smooth_vel	examples/gradient_3D.py	/^    smooth_vel = np.zeros(shape=(grid_size, grid_size, grid_size), dtype=dtype)$/;"	v
snapshot_indexes	simwave/kernel/frontend/solver.py	/^    def snapshot_indexes(self, saving_stride):$/;"	m	class:Solver
solver	examples/acoustic_3D.py	/^solver = Solver($/;"	v
solver_options	examples/fwi_3D_gpu.py	/^    solver_options = {$/;"	v
source	examples/acoustic_3D.py	/^source = Source($/;"	v
source_options	examples/fwi_3D_gpu.py	/^    source_options = {$/;"	v
sources	simwave/kernel/frontend/solver.py	/^    def sources(self):$/;"	m	class:Solver
space_model	examples/acoustic_3D.py	/^space_model = SpaceModel($/;"	v
space_model	simwave/kernel/frontend/model.py	/^    def space_model(self):$/;"	m	class:TimeModel
space_model	simwave/kernel/frontend/solver.py	/^    def space_model(self):$/;"	m	class:Solver
space_model	simwave/kernel/frontend/source.py	/^    def space_model(self):$/;"	m	class:Source
space_options	examples/fwi_3D_gpu.py	/^    space_options = {$/;"	v
space_order	examples/gradient_3D.py	/^space_order = 4$/;"	v
space_order	simwave/kernel/frontend/model.py	/^    def space_order(self):$/;"	m	class:SpaceModel
spacing	examples/gradient_3D.py	/^spacing = 10$/;"	v
t_his	examples/fwi_3D_gpu.py	/^    t_his = []$/;"	v
tcc	README.md	/^# tcc/;"	c
tf	simwave/kernel/frontend/model.py	/^    def tf(self):$/;"	m	class:TimeModel
throwExceptionIfError	simwave/kernel/backend/include/nvcomp/nvcomp.hpp	/^inline void throwExceptionIfError(nvcompStatus_t error, const std::string& msg)$/;"	f	namespace:nvcomp	typeref:typename:void
time_indexes	simwave/kernel/frontend/model.py	/^    def time_indexes(self):$/;"	m	class:TimeModel
time_model	examples/acoustic_3D.py	/^time_model = TimeModel($/;"	v
time_model	simwave/kernel/frontend/solver.py	/^    def time_model(self):$/;"	m	class:Solver
time_model	simwave/kernel/frontend/source.py	/^    def time_model(self):$/;"	m	class:MultiWavelet
time_model	simwave/kernel/frontend/source.py	/^    def time_model(self):$/;"	m	class:RickerWavelet
time_options	examples/fwi_3D_gpu.py	/^    time_options = {$/;"	v
time_values	simwave/kernel/frontend/model.py	/^    def time_values(self):$/;"	m	class:TimeModel
timestep	simwave/kernel/backend/c_code/compression/gradient.cpp	/^  size_t timestep;  $/;"	m	struct:CheckpointStruct	typeref:typename:size_t	file:
timestep	simwave/kernel/backend/c_code/multi/gradient.cpp	/^  int timestep;  $/;"	m	struct:CheckpointStruct	typeref:typename:int	file:
timestep	simwave/kernel/backend/c_code/normal/gradient.cpp	/^  int timestep;  $/;"	m	struct:CheckpointStruct	typeref:typename:int	file:
timesteps	simwave/kernel/frontend/model.py	/^    def timesteps(self):$/;"	m	class:TimeModel
timesteps	simwave/kernel/frontend/source.py	/^    def timesteps(self):$/;"	m	class:MultiWavelet
timesteps	simwave/kernel/frontend/source.py	/^    def timesteps(self):$/;"	m	class:Wavelet
tru_vel	examples/gradient_3D.py	/^    tru_vel = camembert_velocity_model(grid_size, radius=10)$/;"	v
type	simwave/kernel/backend/include/nvcomp/ans.h	/^  nvcompANSType_t type;$/;"	m	struct:__anon545a52040108	typeref:typename:nvcompANSType_t
type	simwave/kernel/backend/include/nvcomp/cascaded.h	/^  nvcompType_t type;$/;"	m	struct:__anon717ab5aa0208	typeref:typename:nvcompType_t
u	simwave/kernel/frontend/solver.py	/^    def u(self):$/;"	m	class:Solver
u_full	examples/acoustic_3D.py	/^u_full, recv = solver.forward()$/;"	v
uncompressed_buffer_size	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  size_t uncompressed_buffer_size;$/;"	m	struct:nvcomp::CompressionConfig	typeref:typename:size_t
url	examples/fwi_3D_gpu.py	/^url = "https:\/\/s3.amazonaws.com\/open.source.geoscience\/open_data\/seg_eage_models_cd\/Salt_M/;"	v
use_bp	simwave/kernel/backend/include/nvcomp/cascaded.h	/^  int use_bp;$/;"	m	struct:__anon717ab5aa0108	typeref:typename:int
use_bp	simwave/kernel/backend/include/nvcomp/cascaded.h	/^  int use_bp;$/;"	m	struct:__anon717ab5aa0208	typeref:typename:int
user_options	versioneer.py	/^        user_options = []$/;"	v	class:get_cmdclass.cmd_version
v	simwave/kernel/frontend/solver.py	/^    def v(self):$/;"	m	class:Solver
values	simwave/kernel/frontend/source.py	/^    def values(self):$/;"	m	class:MultiWavelet
values	simwave/kernel/frontend/source.py	/^    def values(self):$/;"	m	class:Wavelet
vel	examples/acoustic_3D.py	/^vel = np.zeros(shape=(100, 100, 100), dtype=np.float32)$/;"	v
velocity_model	simwave/kernel/frontend/model.py	/^    def velocity_model(self):$/;"	m	class:SpaceModel
versions_from_file	versioneer.py	/^def versions_from_file(filename):$/;"	f
versions_from_parentdir	simwave/_version.py	/^def versions_from_parentdir(parentdir_prefix, root, verbose):$/;"	f
versions_from_parentdir	versioneer.py	/^def versions_from_parentdir(parentdir_prefix, root, verbose):$/;"	f
vp	examples/fwi_3D_gpu.py	/^    vp = load_velocity_model_url(url)$/;"	v
vp	examples/fwi_3D_gpu.py	/^    vp = resize(vp, eval_shape(space_options))$/;"	v
vp_guess	examples/fwi_3D_gpu.py	/^    vp_guess = gaussian_filter(vp, sigma=5)$/;"	v
wavelet	simwave/kernel/frontend/solver.py	/^    def wavelet(self):$/;"	m	class:Solver
wavelet_options	examples/fwi_3D_gpu.py	/^    wavelet_options = {$/;"	v
window_radius	simwave/kernel/frontend/source.py	/^    def window_radius(self):$/;"	m	class:Source
write_to_version_file	versioneer.py	/^def write_to_version_file(filename, versions):$/;"	f
~PimplManager	simwave/kernel/backend/include/nvcomp/nvcompManager.hpp	/^  virtual ~PimplManager() {}$/;"	f	struct:nvcomp::PimplManager
